---
layout: post
title:  "Class Manage" 
tags: TEST
categories: original
---


**班级信息管理系统**本课题针对便于学生信息管理的问题而设计的一个管理系统。


<ul>
  {% for post in site.posts %}
    <li>
      <a href="{{ post.url }}">{{ post.title }}</a>
      {{ post.excerpt }}
    </li>
  {% endfor %}
</ul>


利用计算机进行学生信息管理，保证准确，无误，快速输出，利用计算机对有关信息进行查询，检索迅速，查找方便，可靠性高，存储量大，保密性好。
## 功能需求分析 ##

通过对系统的需求进行分析，系统设不同的用户:管理员，教师，学生。各用户的具体描述 如下:

* 管理员:描述:管理维护整个系统，包括发布各种通知，设置选课时段，选课前学生只能登录 查看选课通知，不能选课;选课结束，学生不能再进行选课更改，只能查看选课信息。管理 让学生所选的课程。增删学生，教师，管理员信息。
* 教师:描述:只能查看选课通知，期末管理员开放成绩输入的时候输入学生成绩。

* 学生:描述:选课前查看选课通知，不能进行选课;等待到选课时间段后，根据自己的兴趣 爱好进行选课，期间可以任意进行增删改自己的选课信息。查看自己的个人信息。班级的总 信息。

## 数据库需求分析 ##

本课题根据学生信息管理综合分析，便处于方便管理考虑，将学生信息管理系统的功能总结 起来，共需要实现以下几个方面功能:

* 学生信息* 课程信息* 教师信息 
* 管理员信息 
* 班级图书馆 
* 权限操作通过以上功能的设计与实现，并实现学生信息管理系统的基本功能。本课题仅以比较简单易 懂的方式介绍给读者一个学生班级信息管理系统的设计与实现的流程。

![test]({{ site.url }}/assets/classer.png)

![test]({{ site.url }}/assets/progro.png) 

##### 开始登录: ####

```<welcome-file-list> <welcome-file>login.html</welcome-file></welcome-file-list>
```##### 登录失败后重新登录: ####

```if(name!=null && pwd!=null && name.equals(rs.getString(1)) &&pwd.equals(rs.getString(2))){ s=1;resp.sendRedirect("success.html");}if(k==0) resp.sendRedirect("login fail id.html"); else if(d==0) resp.sendRedirect("login fail.html");```
   
##### 运行 java 文件: #####

 ```<servlet><servlet-name>login</servlet-name><servlet-class>com.wendy.L</servlet-class> </servlet><servlet-mapping> <servlet-name>login</servlet-name> <url-pattern>/login</url-pattern>      </servlet-mapping> <servlet><servlet-name>main</servlet-name><servlet-class>com.wendy.Servlet</servlet-class> </servlet><servlet-mapping> <servlet-name>main</servlet-name> <url-pattern>/main</url-pattern>      </servlet-mapping>      <servlet><servlet-name>other</servlet-name><servlet-class>com.wendy.Other</servlet-class> </servlet><servlet-mapping> <servlet-name>other</servlet-name> <url-pattern>/other</url-pattern>      </servlet-mapping>      <servlet><servlet-name>cou</servlet-name><servlet-class>com.wendy.Cou</servlet-class> </servlet><servlet-mapping> <servlet-name>cou</servlet-name> <url-pattern>/cou</url-pattern>      </servlet-mapping>      <servlet><servlet-name>adop</servlet-name><servlet-class>com.wendy.Adop</servlet-class> </servlet><servlet-mapping> <servlet-name>adop</servlet-name> <url-pattern>/adop</url-pattern>      </servlet-mapping> ```               

##### 跳转登陆成功界面 success.html #####

```if(name!=null && pwd!=null && name.equals(rs.getString(1)) &&pwd.equals(rs.getString(2))){ s=1;resp.sendRedirect("success.html"); }

```![test]({{ site.url }}/assets/desk.jpg) 

## 结束语 ##

我们针对系统需求，对需求进行了全面的分析，将系统划分为几个不同的功能模块。
 
* 使用 E-R 图，对系统的数据结构进行了设计。 
* 针对系统的权限管理，班级选课管理，信息管理等进行了详细设计和实现。 
* 针对系统实现的功能模块设计了测试用例并进行测试。 
* 通过测试验证了系统主模块的功能。

## 环境配置 ##

详细配置：

工具 | 版本
-------------- | -------------Microsoft SQL Server Management Studio | 10.50.1600.1
   Microsoft Analysis Services 客户端工具 |10.50.1600.1
  CMicrosoft 数据访问组件 (MDAC) | 6.1.7601.17514
 Microsoft MSXML | 3.0 6.0
  Microsoft Internet Explorer | 9.11.9600.17728 Microsoft .NET Framework | 2.0.50727.5485
 操作系统 | 6.1.7601
 
 数据库服务器基本硬件配置：
 
   硬件 |  工具 | 版本
 -------------- | -------------- | -------------
 数据库服务器 |处理器| Inter(R)Core(Tm)i7—4200u cpu@1.6GHz 2.3GHz数据库服务器 |安装内存|16.00GB 
数据库服务器 |系统类型|64 位操作系统
文字处理软件 |WPS 文字 |9.0.1.4.5数据库工具 |derby |10.8.3.0ER图处理软件 |visio |2013 personal截图处理软件  |Q Q |7.0(14295) 
J2EE平台搭建 |MyEclipseEnterprise Workbench |10.0-20111028
 
